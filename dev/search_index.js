var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = DftFunctionals","category":"page"},{"location":"#DftFunctionals","page":"Home","title":"DftFunctionals","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DftFunctionals.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [DftFunctionals]","category":"page"},{"location":"#DftFunctionals.DftFunctional-Tuple{Symbol, Vararg{Any}}","page":"Home","title":"DftFunctionals.DftFunctional","text":"A generic DFT functional implementation. Valid identifiers Id are the ones supported by Libxc (https://tddft.org/programs/libxc) as symbols, e.g. :lda_x, hyb_gga_xc_b3lyp.\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.PbeCorrelation","page":"Home","title":"DftFunctionals.PbeCorrelation","text":"PBE correlation.\n\n\n\n\n\n","category":"type"},{"location":"#DftFunctionals.PbeExchange","page":"Home","title":"DftFunctionals.PbeExchange","text":"PBE exchange.\n\n\n\n\n\n","category":"type"},{"location":"#DftFunctionals.energy-Union{Tuple{T}, Tuple{LdaExchange, T}} where T<:Number","page":"Home","title":"DftFunctionals.energy","text":"LDA Slater exchange (DOI: 10.1017/S0305004100016108 and 10.1007/BF01340281)\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.energy_per_particle-Union{Tuple{Improved}, Tuple{T}, Tuple{DftFunctionals.LdaCorrelationPw{Improved}, T}} where {T<:Number, Improved}","page":"Home","title":"DftFunctionals.energy_per_particle","text":"Perdew, Wang correlation from 1992 (10.1103/PhysRevB.45.13244)\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.energy_per_particle-Union{Tuple{T}, Tuple{DftFunctional{:lda_c_vwn}, T}} where T<:Number","page":"Home","title":"DftFunctionals.energy_per_particle","text":"VWN5 LDA correlation according to Vosko, Wilk, and Nusair, (DOI 10.1139/p80-159).\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.family-Union{Tuple{Functional{F}}, Tuple{F}} where F","page":"Home","title":"DftFunctionals.family","text":"Return the family of a functional. Results are :lda, :gga, :mgga and :mggal (Meta-GGA requiring Laplacian of ρ)\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.has_energy-Tuple{Functional}","page":"Home","title":"DftFunctionals.has_energy","text":"Does this functional support energy evaluations? Some don't, in which case energy terms will not be returned by potential_terms and kernel_terms, i.e. e will be false (a strong zero).\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.identifier","page":"Home","title":"DftFunctionals.identifier","text":"Return the identifier corresponding to a functional\n\n\n\n\n\n","category":"function"},{"location":"#DftFunctionals.kernel_terms","page":"Home","title":"DftFunctionals.kernel_terms","text":"kernel_terms(f::Functional, ρ, [σ, τ, Δρ])\n\nEvaluate energy, potential and kernel terms at a real-space grid of densities, density derivatives etc. Not required derivatives for the functional type will be ignored. Returns a named tuple with the same keys as potential_terms and additionally second-derivative cross terms such as Vρσ (frac^2eρσ).\n\n\n\n\n\n","category":"function"},{"location":"#DftFunctionals.kind-Union{Tuple{Functional{F, K}}, Tuple{K}, Tuple{F}} where {F, K}","page":"Home","title":"DftFunctionals.kind","text":"Return the functional kind: :x (exchange), :c (correlation), :k (kinetic) or :xc (exchange and correlation combined)\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.needs_Δρ-Union{Tuple{Functional{F}}, Tuple{F}} where F","page":"Home","title":"DftFunctionals.needs_Δρ","text":"True if the functional needs Δ ρ\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.needs_σ-Union{Tuple{Functional{F}}, Tuple{F}} where F","page":"Home","title":"DftFunctionals.needs_σ","text":"True if the functional needs σ = ρ  ρ.\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.needs_τ-Union{Tuple{Functional{F}}, Tuple{F}} where F","page":"Home","title":"DftFunctionals.needs_τ","text":"True if the functional needs τ (kinetic energy density\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.potential_terms","page":"Home","title":"DftFunctionals.potential_terms","text":"potential_terms(f::Functional, ρ, [σ, τ, Δρ])\n\nEvaluate energy and potential terms at a real-space grid of densities, density derivatives etc. Not required derivatives for the functional type will be ignored. Returns a named tuple with keys e (Energy per unit volume), Vρ (fraceρ), Vσ (fraceσ), Vτ (fraceτ), Vl (frace(Δρ)).\n\n\n\n\n\n","category":"function"},{"location":"#DftFunctionals.spinindex_σ-Tuple{Int64, Int64}","page":"Home","title":"DftFunctionals.spinindex_σ","text":"In the functional interface we explicitly use the symmetry σ_αβ = σ_βα for the contracted density gradient σ_ij = ρ_i  ρ_j where ij  α β. Instead of treating σ to have the spin components σ_αα, σ_αβ, σ_βα and σ_ββ, we consider it to have three pseudo-spin components σ_αα, σ_x and σ_ββ, where σ_x = (σ_αβ + σ_βα)2 = σ_αβ. Input arrays like σ or output arrays like Vσ or Vρσ will therefore feature a spin axis of length 3 refering to the σ_αα, σ_αβ and σ_ββ components / derivatives respectively. E.g. σ is of shape (3, n_p) (where n_p is the number of points where evaluation takes place.\n\nThis function maps the \"unfolded\" spin tuple (i, j) in σ_ij to the corresponding place in the length-3 spin axis of σ.\n\n\n\n\n\n","category":"method"},{"location":"#DftFunctionals.threshold_ρ","page":"Home","title":"DftFunctionals.threshold_ρ","text":"Threshold for the density (below this value, functionals and derivatives evaluate to zero). The threshold may depend on the floating-point type used to represent densities and potentials, which is passed as the second argument.\n\n\n\n\n\n","category":"function"}]
}
