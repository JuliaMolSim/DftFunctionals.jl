name: CI
on:
  push:
    branches:
      - master
    tags: ['*']
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.mode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mode:
          - stable
          - latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Julia stable
        uses: julia-actions/setup-julia@v2
        with:
          version: '1.10'
          arch: x64
        if: ${{ matrix.mode == 'stable' }}
      - name: Setup Julia latest (pre-releases included)
        uses: julia-actions/setup-julia@v2
        with:
          version: '1'
          include-all-prereleases: true
          arch: x64
        if: ${{ matrix.mode == 'latest' }}

      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using DftFunctionals
            DocMeta.setdocmeta!(DftFunctionals, :DocTestSetup, :(using DftFunctionals); recursive=true)
            doctest(DftFunctionals)'
